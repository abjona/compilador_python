
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE DOUBLE_VAL END EQUALS INT_VAL LPAREN MINUS NUMBER PLUS PRINT RPAREN STRING TIMES VARexpression : expression PLUS termexpression : expression MINUS termexpression : expression DIVIDE termexpression : expression TIMES termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERstatement : assignmentstatement : expressionexpression : NUMBERexpression : VAR EQUALS expression END\n                      | VAR EQUALS VAR ENDassignment : VAR EQUALS NUMBER ENDstatement : PRINT expression ENDexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'NUMBER':([0,5,7,8,9,10,11,12,13,],[3,3,16,16,16,16,16,16,3,]),'VAR':([0,5,13,],[4,4,22,]),'LPAREN':([0,5,13,],[5,5,5,]),'$end':([1,2,3,6,15,16,17,18,19,20,21,24,25,26,],[0,-5,-9,-8,-1,-9,-2,-3,-4,-6,-7,-17,-14,-13,]),'PLUS':([1,2,3,6,14,15,16,17,18,19,20,21,23,24,25,26,],[7,-5,-9,-8,7,-1,-9,-2,-3,-4,-6,-7,7,-17,-14,-13,]),'MINUS':([1,2,3,6,14,15,16,17,18,19,20,21,23,24,25,26,],[8,-5,-9,-8,8,-1,-9,-2,-3,-4,-6,-7,8,-17,-14,-13,]),'DIVIDE':([1,2,3,6,14,15,16,17,18,19,20,21,23,24,25,26,],[9,12,-9,-8,9,12,-9,12,12,12,-6,-7,9,-17,-14,-13,]),'TIMES':([1,2,3,6,14,15,16,17,18,19,20,21,23,24,25,26,],[10,11,-9,-8,10,11,-9,11,11,11,-6,-7,10,-17,-14,-13,]),'RPAREN':([2,3,6,14,15,16,17,18,19,20,21,24,25,26,],[-5,-9,-8,24,-1,-9,-2,-3,-4,-6,-7,-17,-14,-13,]),'END':([2,3,6,15,16,17,18,19,20,21,22,23,24,25,26,],[-5,-9,-8,-1,-9,-2,-3,-4,-6,-7,25,26,-17,-14,-13,]),'EQUALS':([4,22,],[13,13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,13,],[1,14,23,]),'term':([0,5,7,8,9,10,13,],[2,2,15,17,18,19,2,]),'factor':([0,5,7,8,9,10,11,12,13,],[6,6,6,6,6,6,20,21,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','views.py',117),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','views.py',121),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_divide','views.py',125),
  ('expression -> expression TIMES term','expression',3,'p_expression_times','views.py',129),
  ('expression -> term','expression',1,'p_expression_term','views.py',133),
  ('term -> term TIMES factor','term',3,'p_term_times','views.py',137),
  ('term -> term DIVIDE factor','term',3,'p_term_div','views.py',141),
  ('term -> factor','term',1,'p_term_factor','views.py',145),
  ('factor -> NUMBER','factor',1,'p_factor_num','views.py',149),
  ('statement -> assignment','statement',1,'p_statement_assignment','views.py',157),
  ('statement -> expression','statement',1,'p_statement_expression','views.py',161),
  ('expression -> NUMBER','expression',1,'p_expression_name','views.py',170),
  ('expression -> VAR EQUALS expression END','expression',4,'p_assignment','views.py',174),
  ('expression -> VAR EQUALS VAR END','expression',4,'p_assignment','views.py',175),
  ('assignment -> VAR EQUALS NUMBER END','assignment',4,'p_assignment_number','views.py',180),
  ('statement -> PRINT expression END','statement',3,'p_print_statement','views.py',200),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_factor_expr','views.py',205),
]
